[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+9] = 7;     //MODE_FLAG

alias userSP R0;
userSP = SP;

[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+13] = SP;   //UPTR
SP = [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+11]*512 - 1;

// checking for file descripter
alias phyPageNum R1;
alias fileDiscPhyAdd R2;
phyPageNum = [PTBR+2*((userSP-4)/512)];
fileDiscPhyAdd = (phyPageNum*512)+((userSP-4)%512);
alias fileDisc R3;
fileDisc = [fileDiscPhyAdd];

if(fileDisc!=-1)
then
	// set return val = -1 file disc invalid
	alias retVal R5;
	retVal = ([PTBR+2*((userSP-1)/512)]*512)+((userSP-1)%512);
	[retVal] = -1;

else
    alias word_add R3;
    word_add = [[PTBR+2*((userSP-3)/512)]*512+(userSP-3)%512];

    multipush (R0,R1,R2,R3,R4,R5);

    // R3 already has word_address
    R1 = 4;
    R2 = [SYSTEM_STATUS_TABLE+1];

    call DEVICE_MANAGER;

    multipush (R0,R1,R2,R3,R4,R5);

    // set return val = 0 for success
	alias retVal R5;
	retVal = ([PTBR+2*((userSP-1)/512)]*512)+((userSP-1)%512);
	[retVal] = 0;
endif;

[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+9] = 0;     //MODE_FLAG

SP = userSP;
ireturn;