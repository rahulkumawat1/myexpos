//Login has system call number 27
//Login system call can only be invoked from Login process(PID = 1)
//two arguments are UserName(String) and unencrypted password(String)

//return 0 if success
//return -1 if invalid username or password
//return -2 if permission denied

alias currPid R1;
currPid = [SYSTEM_STATUS_TABLE + 1];

[PROCESS_TABLE + 16*currPid + 9] = INT_LOGIN;       //INT_LOGIN = 27

alias userSP R2;
userSP = SP;

[PROCESS_TABLE + 16*currPid + 13] = SP;
SP = [PROCESS_TABLE + 16*currPid + 11]*512 - 1;

alias ret_adr R3;
ret_adr = [PTBR + 2*((userSP-1)/512)]*512 + (userSP-1)%512;

alias UserName R4;
UserName = [[PTBR + 2*((userSP-4)/512)]*512 + (userSP-4)%512];

alias password R5;
password = [[PTBR + 2*((userSP-3)/512)]*512 + (userSP-3)%512];

encrypt password;

if(currPid != 1) then	                     //login is not called from login process
	[ret_adr] = -2;	
	SP = userSP;
	[PROCESS_TABLE + currPid * 16 + 9] = 0;	        //reset the mode flag
	ireturn;
endif;

//get the user table entry corresponding to the given username

alias i R6;
i = 0;

while(i < MAX_USER_NUM) do
    if(UserName == [USER_TABLE + 2*i]) then
        break;
    endif;
    i = i + 1;
endwhile;

if(i == MAX_USER_NUM) then
    [ret_adr] = -1;
    SP = userSP;
    [PROCESS_TABLE + 16*currPid + 9] = 0;
    ireturn;
endif;

alias userID R7;
userID = i;

if([USER_TABLE + 2*i + 1] != password) then         //password does not match
    [ret_adr] = -1;
    SP = userSP;
    [PROCESS_TABLE + 16*currPid + 9] = 0;
    ireturn;
endif;

//set the process table entries for shell process(PID = 2)

[PROCESS_TABLE + 2*16 + 4] = CREATED;       //STATE
[PROCESS_TABLE + 2*16 + 3] = userID;        //USERID

//set the login process to wait for this shell
[PROCESS_TABLE + 1*16 + 4] = WAIT_PROCESS;
[PROCESS_TABLE + 1*16 + 5] = 2;

//set the current userID in system status table
[SYSTEM_STATUS_TABLE] = userID;

backup;
call SCHEDULER;
restore;

[ret_adr] = 0;	                            //success
[PROCESS_TABLE + currPid*16 + 9] = 0;	    //reset the mode flag
SP = userSP;

ireturn;